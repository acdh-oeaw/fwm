# Generated by Django 3.2.8 on 2021-10-29 13:19

from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='SkosCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pref_label', models.CharField(blank=True, help_text='Collection label or name', max_length=300, null=True, verbose_name='skos:prefLabel')),
                ('label_lang', models.CharField(blank=True, default='eng', help_text='Language of preferred label given above', max_length=3, verbose_name='skos:prefLabel language')),
                ('description', models.TextField(blank=True, help_text='Description', null=True, verbose_name='elaborate description of the collection')),
            ],
        ),
        migrations.CreateModel(
            name='SkosConcept',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pref_label', models.CharField(help_text='Preferred label for concept', max_length=300, verbose_name='skos:prefLabel')),
                ('pref_label_lang', models.CharField(blank=True, default='eng', help_text='Language of preferred label given above', max_length=3, verbose_name='skos:prefLabel language')),
                ('top_concept', models.BooleanField(help_text='Is this concept a top concept of concept scheme?', null=True)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('broader_concept', mptt.fields.TreeForeignKey(blank=True, help_text='Concept with a broader meaning that this concept inherits from', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='narrower_concepts', to='vocabs.skosconcept', verbose_name='skos:broader')),
                ('collection', models.ForeignKey(blank=True, help_text='Collection that this concept is a member of', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='has_members', to='vocabs.skoscollection', verbose_name='member of skos:Collection')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
